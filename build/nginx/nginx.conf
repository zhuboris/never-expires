events {
}

http {
    access_log /etc/nginx/log/access.log;
    error_log /etc/nginx/log/error.log;

    client_max_body_size 20m;

    proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=static_cache:10m max_size=100m use_temp_path=off;

    upstream idapi {
        server idapi:3002;
    }

    upstream reminder {
        server reminder:3001;
    }

    upstream grafana {
        server grafana:3000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name never-expires.com *.never-expires.com;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name never-expires.com www.never-expires.com;
        include /etc/nginx/ssl.conf;

        location / {
            alias /var/www/public/;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name id.never-expires.com;
        include /etc/nginx/ssl.conf;

        location / {
            proxy_pass http://idapi;

            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
            proxy_set_header    X-Device-Identifier $http_x_device_identifier;
            proxy_set_header    X-Request-ID        $http_x_request_id;
            proxy_set_header    User-Agent          $http_user_agent;
            proxy_set_header    Accept-Language     $http_accept_language;
            proxy_set_header    Authorization       $http_authorization;
            proxy_set_header    Host                $host;
            proxy_http_version 1.1;
        }
    }

    server {
            listen 443 ssl;
            listen [::]:443 ssl;

            server_name reminder.never-expires.com;
            include /etc/nginx/ssl.conf;

            location / {
                proxy_pass http://reminder;

                proxy_set_header    X-Real-IP           $remote_addr;
                proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
                proxy_set_header    X-Forwarded-Proto   $scheme;
                proxy_set_header    X-Device-Identifier $http_x_device_identifier;
                proxy_set_header    X-Request-ID        $http_x_request_id;
                proxy_set_header    User-Agent          $http_user_agent;
                proxy_set_header    Accept-Language     $http_accept_language;
                proxy_set_header    Authorization       $http_authorization;
                proxy_set_header    Host                $host;
                proxy_http_version 1.1;
            }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 8080;

        include /etc/nginx/ssl.conf;
        access_log off;

        location /stub_status {
            stub_status;
        }
    }

    server {
            listen 443 ssl;
            listen [::]:443 ssl;

            server_name grafana.never-expires.com;
            include /etc/nginx/ssl.conf;
            access_log off;

            location /api/live {
                proxy_pass http://grafana;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $http_host;
            }

            location / {
                proxy_pass http://grafana;

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
    }
}